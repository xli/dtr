#!/usr/bin/env ruby
require 'optparse'
require 'logger'
begin
  require 'dtr'
rescue LoadError
  require 'rubygems'
  require 'dtr'
end

NOTES = <<-NOTES
----------------
Notes: 
  * DTR would always add 'localhost' into broadcast list.
  * Agent start by specifying runners by -r option, every runner would be started in different process for running test. e.g. dtr -r runner1,runner2
  * DTR master environment options:
    * DTR_MASTER_ENV: this variable would be copied into agent process for sharing info between master and agents. Normally used in agent setup environment command.
    * DTR_AGENT_ENV_SETUP_CMD: this variable would be applied as agent setup environment command when agent have no setup environment command specified by --setup option.
    * DTR_LOG_LEVEL: master process logger level, e.g. ENV['DTR_LOG_LEVEL'] = Logger::DEBUG. Agent process logs would be output in master process log file, so setting this option also changes agent logger level.

DTR is a distributed test runner program for decreasing time of running ruby tests based on ruby 'test/unit' package.
For additional information, see http://dtr.rubyforge.org/
NOTES

opts = OptionParser.new do |opts|
  opts.banner = "DTR usage: #{$0} [options]"
  opts.separator ""
  opts.separator "Synopsis:"
  opts.separator "dtr -a broadcast_ip -g group_name -r runner1_name,runner2_name"
  opts.separator "dtr -a broadcast_ip -m"
  opts.separator ""
  opts.separator "Options:"
  
  opts.on_tail("-m", "--monitor", "Monitor the status of the dtr agents and master processes. Used for testing your dtr grid environment. CAUTION! monitoring agents causes all idle agents hang on by the monitor process.") do
    $monitor = true
  end

  opts.on("-p", "--port PORT",  "Port number of DTR agent listening. Default is 7788.") do |port|
    DTR.agent_listen_port = port
  end
  
  opts.on("-g", "--group GROUP_NAME",  "If you have several DTR grids working for different project or environment, you should group your agents in different names for different usages. Default is none.") do |group_name|
    DTR.group = group_name
  end
  
  opts.on("-r runner1_name,runner2_name", Array, "Start DTR test runner agent with unique runner names.") do |names|
    DTR_AGENT_OPTIONS[:runners] = names.collect{|name| name.untaint}
  end
  
  opts.on("-a", "--broadcast_address ADDRESS", "Specify broadcast address for looking up dtr service, e.g. 192.168.255.255. Default is 'localhost'.") do |address|
    if (!address.nil?) && (!address.empty?)
      DTR.broadcast_list = [address]
    end
  end

  opts.on("-i", "--setup COMMAND", "Set command for initializing test runner test environment, e.g. 'rake db:test:prepare'. Default is do nothing. You also can specify DTR_AGENT_ENV_SETUP_CMD in your master process environment to let all agents setup same environment.") do |command|
    DTR_AGENT_OPTIONS[:agent_env_setup_cmd] = command.untaint
  end

  opts.on("-d", "--working_directory DIRECTORY", "Specify a directory as agent launching & working directory.") do |dir|
    DTR_AGENT_OPTIONS[:launching_dir] = dir
  end
  
  opts.on_tail("-v", "--version", "Show version") do
    puts "dtr, version " + DTRVERSION
  end

  opts.on_tail("-h", "--help", "Show this help doc") do 
    puts opts
    puts NOTES
  end
end

no_argv = ARGV.empty?

opts.parse!

if no_argv
  puts opts
  puts NOTES
end

if $monitor
  DTR.monitor
end
if DTR_AGENT_OPTIONS[:runners] && !DTR_AGENT_OPTIONS[:runners].empty?
  Dir.chdir(DTR_AGENT_OPTIONS[:launching_dir] || '.') do
    DTR.start_agent
  end
end
